"""Update table names and relationships

Revision ID: 5a14c4c9f0b9
Revises: 1b9c16acf4cb
Create Date: 2024-09-27 05:13:51.743139

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5a14c4c9f0b9'
down_revision = '1b9c16acf4cb'
branch_labels = None
depends_on = None


def upgrade():
    # 外部キー制約を削除
    op.drop_constraint('schedules_opportunity_id_fkey',
                       'schedules',
                       type_='foreignkey')
    op.drop_constraint('tasks_opportunity_id_fkey',
                       'tasks',
                       type_='foreignkey')
    op.drop_constraint('schedules_account_id_fkey',
                       'schedules',
                       type_='foreignkey')
    op.drop_constraint('tasks_account_id_fkey', 'tasks', type_='foreignkey')
    op.drop_constraint('schedules_lead_id_fkey',
                       'schedules',
                       type_='foreignkey')
    op.drop_constraint('tasks_lead_id_fkey', 'tasks', type_='foreignkey')
    op.drop_constraint('emails_lead_id_fkey', 'emails', type_='foreignkey')
    op.drop_constraint('opportunities_account_id_fkey',
                       'opportunities',
                       type_='foreignkey')
    op.drop_constraint('opportunities_lead_id_fkey',
                       'opportunities',
                       type_='foreignkey')
    op.drop_constraint('accounts_user_id_fkey', 'accounts', type_='foreignkey')
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('leads_email_key', 'leads', type_='unique')
    op.create_unique_constraint('uq_leads_email', 'leads', ['email'], condition=sa.text('email IS NOT NULL'))

    op.drop_constraint('leads_user_id_fkey', 'leads', type_='foreignkey')
    op.drop_constraint('opportunities_user_id_fkey',
                       'opportunities',
                       type_='foreignkey')
    op.drop_constraint('schedules_user_id_fkey',
                       'schedules',
                       type_='foreignkey')
    op.drop_constraint('tasks_user_id_fkey', 'tasks', type_='foreignkey')

    # テーブルを削除
    op.drop_table('schedules')
    op.drop_table('tasks')
    op.drop_table('emails')
    op.drop_table('unknown_emails')
    op.drop_table('opportunities')
    op.drop_table('accounts')
    op.drop_table('leads')
    op.drop_table('email_fetch_tracker')
    op.drop_table('users')

    # テーブルを再作成
    op.create_table(
        'users', sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(length=255), nullable=False),
        sa.Column('email', sa.String(length=255), nullable=False),
        sa.Column('password_hash', sa.String(length=512), nullable=False),
        sa.Column('role', sa.String(length=20), nullable=False),
        sa.PrimaryKeyConstraint('id'), sa.UniqueConstraint('email'),
        sa.UniqueConstraint('username'))

    op.create_table(
        'leads', sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('email', sa.String(length=120), nullable=False),
        sa.Column('phone', sa.String(length=20), nullable=False),
        sa.Column('status', sa.String(length=20), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('last_contact', sa.DateTime(), nullable=False),
        sa.Column('last_followup_email', sa.DateTime(), nullable=True),
        sa.Column('last_followup_tracking_id',
                  sa.String(length=36),
                  nullable=True),
        sa.Column('last_email_opened', sa.DateTime(), nullable=True),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('score', sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
        ), sa.PrimaryKeyConstraint('id'))

    op.create_table(
        'accounts', sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('industry', sa.String(length=50), nullable=False),
        sa.Column('website', sa.String(length=120), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
        ), sa.PrimaryKeyConstraint('id'))

    op.create_table('opportunities',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=False),
                    sa.Column('amount', sa.Float(), nullable=False),
                    sa.Column('stage', sa.String(length=50), nullable=False),
                    sa.Column('close_date', sa.DateTime(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('account_id', sa.Integer(), nullable=False),
                    sa.Column('lead_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['account_id'],
                        ['accounts.id'],
                    ), sa.ForeignKeyConstraint(
                        ['lead_id'],
                        ['leads.id'],
                    ), sa.ForeignKeyConstraint(
                        ['user_id'],
                        ['users.id'],
                    ), sa.PrimaryKeyConstraint('id'))

    op.create_table(
        'email_fetch_tracker', sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('last_fetch_time', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'))

    op.create_table(
        'unknown_emails', sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('sender', sa.String(length=255), nullable=False),
        sa.Column('subject', sa.String(length=255), nullable=False),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('received_at', sa.DateTime(), nullable=False),
        sa.Column('sender_name', sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint('id'))

    op.create_table(
        'emails', sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('sender', sa.String(length=255), nullable=False),
        sa.Column('subject', sa.String(length=255), nullable=False),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('received_at', sa.DateTime(), nullable=False),
        sa.Column('lead_id', sa.Integer(), nullable=False),
        sa.Column('sender_name', sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ['lead_id'],
            ['leads.id'],
        ), sa.PrimaryKeyConstraint('id'))

    op.create_table(
        'tasks', sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('due_date', sa.DateTime(), nullable=False),
        sa.Column('completed', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('lead_id', sa.Integer(), nullable=True),
        sa.Column('opportunity_id', sa.Integer(), nullable=True),
        sa.Column('account_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['account_id'],
            ['accounts.id'],
        ), sa.ForeignKeyConstraint(
            ['lead_id'],
            ['leads.id'],
        ), sa.ForeignKeyConstraint(
            ['opportunity_id'],
            ['opportunities.id'],
        ), sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
        ), sa.PrimaryKeyConstraint('id'))

    op.create_table(
        'schedules', sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('start_time', sa.DateTime(), nullable=False),
        sa.Column('end_time', sa.DateTime(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('account_id', sa.Integer(), nullable=True),
        sa.Column('lead_id', sa.Integer(), nullable=True),
        sa.Column('opportunity_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['account_id'],
            ['accounts.id'],
        ), sa.ForeignKeyConstraint(
            ['lead_id'],
            ['leads.id'],
        ), sa.ForeignKeyConstraint(
            ['opportunity_id'],
            ['opportunities.id'],
        ), sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
        ), sa.PrimaryKeyConstraint('id'))


def downgrade():
    # テーブルを削除
    op.drop_table('schedules')
    op.drop_table('tasks')
    op.drop_table('emails')
    op.drop_table('unknown_emails')
    op.drop_table('email_fetch_tracker')
    op.drop_table('opportunities')
    op.drop_table('accounts')
    op.drop_table('leads')
    op.drop_table('users')

    # 元のテーブルを再作成
    # ここに元のテーブル作成コードを記述
    # 注意: 元の構造を正確に再現する必要があります

    # 外部キー制約を再作成
    # ここに元の外部キー制約を再作成するコードを記述
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'email_fetch_tracker',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('last_fetch_time',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=False),
        sa.PrimaryKeyConstraint('id', name='email_fetch_tracker_pkey'))
    op.create_table(
        'leads',
        sa.Column('id',
                  sa.INTEGER(),
                  server_default=sa.text("nextval('leads_id_seq'::regclass)"),
                  autoincrement=True,
                  nullable=False),
        sa.Column('name',
                  sa.VARCHAR(length=100),
                  autoincrement=False,
                  nullable=False),
        sa.Column('email',
                  sa.VARCHAR(length=120),
                  autoincrement=False,
                  nullable=False),
        sa.Column('phone',
                  sa.VARCHAR(length=20),
                  autoincrement=False,
                  nullable=False),
        sa.Column('status',
                  sa.VARCHAR(length=20),
                  autoincrement=False,
                  nullable=False),
        sa.Column('created_at',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('last_contact',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('last_followup_email',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('last_followup_tracking_id',
                  sa.VARCHAR(length=36),
                  autoincrement=False,
                  nullable=True),
        sa.Column('last_email_opened',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False,
                  nullable=False),
        sa.Column('score',
                  sa.DOUBLE_PRECISION(precision=53),
                  autoincrement=False,
                  nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'],
                                name='leads_user_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='leads_pkey'),
        postgresql_ignore_search_path=False)
    op.create_table(
        'accounts',
        sa.Column(
            'id',
            sa.INTEGER(),
            server_default=sa.text("nextval('accounts_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False),
        sa.Column('name',
                  sa.VARCHAR(length=100),
                  autoincrement=False,
                  nullable=False),
        sa.Column('industry',
                  sa.VARCHAR(length=50),
                  autoincrement=False,
                  nullable=False),
        sa.Column('website',
                  sa.VARCHAR(length=120),
                  autoincrement=False,
                  nullable=False),
        sa.Column('created_at',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False,
                  nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'],
                                name='accounts_user_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='accounts_pkey'),
        postgresql_ignore_search_path=False)
    op.create_table(
        'schedules',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('title',
                  sa.VARCHAR(length=255),
                  autoincrement=False,
                  nullable=False),
        sa.Column('description',
                  sa.TEXT(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('start_time',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('end_time',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False,
                  nullable=False),
        sa.Column('account_id',
                  sa.INTEGER(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('lead_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('opportunity_id',
                  sa.INTEGER(),
                  autoincrement=False,
                  nullable=True),
        sa.ForeignKeyConstraint(['account_id'], ['accounts.id'],
                                name='schedules_account_id_fkey'),
        sa.ForeignKeyConstraint(['lead_id'], ['leads.id'],
                                name='schedules_lead_id_fkey'),
        sa.ForeignKeyConstraint(['opportunity_id'], ['opportunities.id'],
                                name='schedules_opportunity_id_fkey'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'],
                                name='schedules_user_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='schedules_pkey'))
    op.create_table(
        'unknown_emails',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('sender',
                  sa.VARCHAR(length=255),
                  autoincrement=False,
                  nullable=False),
        sa.Column('subject',
                  sa.VARCHAR(length=255),
                  autoincrement=False,
                  nullable=False),
        sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('received_at',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('sender_name',
                  sa.VARCHAR(length=255),
                  autoincrement=False,
                  nullable=True),
        sa.PrimaryKeyConstraint('id', name='unknown_emails_pkey'))
    op.create_table(
        'emails',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('sender',
                  sa.VARCHAR(length=255),
                  autoincrement=False,
                  nullable=False),
        sa.Column('subject',
                  sa.VARCHAR(length=255),
                  autoincrement=False,
                  nullable=False),
        sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('received_at',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('lead_id', sa.INTEGER(), autoincrement=False,
                  nullable=False),
        sa.Column('sender_name',
                  sa.VARCHAR(length=255),
                  autoincrement=False,
                  nullable=True),
        sa.ForeignKeyConstraint(['lead_id'], ['leads.id'],
                                name='emails_lead_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='emails_pkey'))
    op.create_table(
        'tasks',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('title',
                  sa.VARCHAR(length=255),
                  autoincrement=False,
                  nullable=False),
        sa.Column('description',
                  sa.TEXT(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('due_date',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('completed',
                  sa.BOOLEAN(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('created_at',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False,
                  nullable=False),
        sa.Column('lead_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('opportunity_id',
                  sa.INTEGER(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('account_id',
                  sa.INTEGER(),
                  autoincrement=False,
                  nullable=True),
        sa.ForeignKeyConstraint(['account_id'], ['accounts.id'],
                                name='tasks_account_id_fkey'),
        sa.ForeignKeyConstraint(['lead_id'], ['leads.id'],
                                name='tasks_lead_id_fkey'),
        sa.ForeignKeyConstraint(['opportunity_id'], ['opportunities.id'],
                                name='tasks_opportunity_id_fkey'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'],
                                name='tasks_user_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='tasks_pkey'))
    op.create_table(
        'users',
        sa.Column('id',
                  sa.INTEGER(),
                  server_default=sa.text("nextval('users_id_seq'::regclass)"),
                  autoincrement=True,
                  nullable=False),
        sa.Column('username',
                  sa.VARCHAR(length=255),
                  autoincrement=False,
                  nullable=False),
        sa.Column('email',
                  sa.VARCHAR(length=255),
                  autoincrement=False,
                  nullable=False),
        sa.Column('password_hash',
                  sa.VARCHAR(length=512),
                  autoincrement=False,
                  nullable=False),
        sa.Column('role',
                  sa.VARCHAR(length=20),
                  autoincrement=False,
                  nullable=False),
        sa.PrimaryKeyConstraint('id', name='users_pkey'),
        sa.UniqueConstraint('email', name='users_email_key'),
        sa.UniqueConstraint('username', name='users_username_key'),
        postgresql_ignore_search_path=False)
    op.create_table(
        'opportunities',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('name',
                  sa.VARCHAR(length=255),
                  autoincrement=False,
                  nullable=False),
        sa.Column('amount',
                  sa.DOUBLE_PRECISION(precision=53),
                  autoincrement=False,
                  nullable=False),
        sa.Column('stage',
                  sa.VARCHAR(length=50),
                  autoincrement=False,
                  nullable=False),
        sa.Column('close_date',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('created_at',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False,
                  nullable=False),
        sa.Column('account_id',
                  sa.INTEGER(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('lead_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['account_id'], ['accounts.id'],
                                name='opportunities_account_id_fkey'),
        sa.ForeignKeyConstraint(['lead_id'], ['leads.id'],
                                name='opportunities_lead_id_fkey'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'],
                                name='opportunities_user_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='opportunities_pkey'))
    # ### end Alembic commands ###
