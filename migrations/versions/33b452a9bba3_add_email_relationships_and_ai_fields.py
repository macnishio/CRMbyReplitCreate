"""Add email relationships and AI fields

Revision ID: 33b452a9bba3
Revises: 1a40ea25c893
Create Date: 2024-10-28 15:26:09.681865

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '33b452a9bba3'
down_revision = '1a40ea25c893'
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('emails', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ai_analysis', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('ai_analysis_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('ai_model_used', sa.String(length=50), nullable=True))

    # Add email_id and foreign key constraint to schedules
    with op.batch_alter_table('schedules', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('is_ai_generated', sa.Boolean(), server_default='false', nullable=False))
        batch_op.create_foreign_key('fk_schedules_email_id', 'emails', ['email_id'], ['id'])

    # Add email_id and foreign key constraint to tasks
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('is_ai_generated', sa.Boolean(), server_default='false', nullable=False))
        batch_op.create_foreign_key('fk_tasks_email_id', 'emails', ['email_id'], ['id'])

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_constraint('fk_tasks_email_id', type_='foreignkey')
        batch_op.drop_column('is_ai_generated')
        batch_op.drop_column('email_id')

    with op.batch_alter_table('schedules', schema=None) as batch_op:
        batch_op.drop_constraint('fk_schedules_email_id', type_='foreignkey')
        batch_op.drop_column('is_ai_generated')
        batch_op.drop_column('email_id')

    with op.batch_alter_table('emails', schema=None) as batch_op:
        batch_op.drop_column('ai_model_used')
        batch_op.drop_column('ai_analysis_date')
        batch_op.drop_column('ai_analysis')